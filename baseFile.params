#MAIN
evalthreads = 				1
breedthreads = 				1
seed.0 =				time
jobs = 30

checkpoint =				false
checkpoint-modulo =                     1
checkpoint-prefix = 			ec
print-params =                          false
print-unused-params =               true

#STATISTICS
stat =                                  es.ugr.hpmoon.HPMOONStatistics


#NSGA2 SPECIES
pop.subpop.0.species.fitness =	ec.multiobjective.nsga2.NSGA2MultiObjectiveFitness
eval =				ec.multiobjective.nsga2.NSGA2Evaluator
breed =				ec.multiobjective.nsga2.NSGA2Breeder
#/NSGA2 SPECIES



#OBJECTIVES
multi.fitness.num-objectives 	= 2
multi.fitness.maximize.0 = false
multi.fitness.max.0 		= 1
multi.fitness.min.0 		= 0
multi.fitness.maximize.1 = false
multi.fitness.max.1 		= 1
multi.fitness.min.1 		= 0
#/OBJECTIVES


# ==============================
#PROBLEM
# ==============================
eval.problem = ec.app.moosuite.MooSuite


# ==============================
# EA
# ==============================
state = 				ec.simple.SimpleEvolutionState
init = 					ec.simple.SimpleInitializer
finish = 	        		ec.simple.SimpleFinisher
evaluations = 500000
quit-on-run-complete =			true
pop = 					ec.Population

# don't bother trying to eliminate duplicates from the
# initial population
pop.subpop.0.duplicate-retries =	0

# breed.elite.0 = 			10



# ==============================
# OPERATORS
# ==============================



pop.default-subpop=0
pop.subpop.0 = ec.Subpopulation

pop.subpop.0.species = ec.vector.FloatVectorSpecies
pop.subpop.0.species.fitness = ec.multiobjective.nsga2.NSGA2MultiObjectiveFitness
pop.subpop.0.species.ind = ec.vector.DoubleVectorIndividual
pop.subpop.0.species.min-gene = 0
pop.subpop.0.species.max-gene = 1

pop.subpop.0.species.crossover-type = sbx
pop.subpop.0.species.crossover-distribution-index = 20
pop.subpop.0.species.mutation-type = polynomial
pop.subpop.0.species.mutation-distribution-index = 20
pop.subpop.0.species.mutation-bounded = true

pop.subpop.0.duplicate-retries = 100
#es.ugr.hpmoon.ChunkMutatorPipeline ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe = es.ugr.hpmoon.ChunkMutatorPipeline
pop.subpop.0.species.pipe.likelihood        	= 1.0

#es.ugr.hpmoon.ChunkCrossoverPipeline ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0		= es.ugr.hpmoon.ChunkCrossoverPipeline

pop.subpop.0.species.pipe.source.0.likelihood 	= 0.9
pop.subpop.0.species.pipe.source.0.source.0 	= ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.0.size = 2
pop.subpop.0.species.pipe.source.0.source.1 	= same



exch = es.ugr.hpmoon.InterPopulationRandomExchange
exch.select = ec.select.TournamentSelection
#the size for each subpop is necessary


exch.start = 0
exch.size = 1 
exch.mod = 5





